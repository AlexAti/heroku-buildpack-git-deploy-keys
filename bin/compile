#!/usr/bin/env ruby

require 'fileutils'
require 'pathname'

build_dir    = ARGV[0]
cache_dir    = ARGV[1]
env_dir      = ARGV[2]

def putter(arg)
  puts "############################################"
  puts arg
end

puts "############################################"
puts "############################################"
puts "          GIT DELOY KEY BUILDPACK           "
puts "############################################"
puts "############################################"

key_file_path = File.join env_dir, 'GITHUB_DEPLOY_KEY'

putter key_file_path

ssh_key = File.open(key_file_path, &:read) if File.exist? key_file_path

putter ssh_key

if ssh_key.nil?
  puts "       !!!! GITHUB_DEDLOY_KEY not set"
  puts "       !!!!   Try `heroku config:add GITHUB_DEPLOY_KEY=<my token>`"
  exit 1
end

ssh_dir = Pathname.new("~/.ssh").expand_path
puts "ssh dir is"
putter ssh_dir

# make ~/.ssh unless exists
Dir.mkdir("#{ssh_dir}/") unless Dir.exist? "#{ENV['HOME']}/.ssh"

# Create the key
File.open "#{ssh_dir}/github_deploy_key", "w" do |f|
    f.puts ssh_key
end

FileUtils.chmod 0400, "#{ssh_dir}/github_deploy_key"

puts "############################### FILE IS"
putter File.read "#{ssh_dir}/github_deploy_key"

# Update the config
File.open "#{ssh_dir}/config", "w" do |f|
  f.puts "Host *"
  f.puts "     StrictHostKeyChecking no"
  f.puts ""
  f.puts "Host github.com"
  f.puts "     User git"
  f.puts "     IdentityFile #{ssh_dir}/github_deploy_key"
  f.puts ""
  f.puts "IdentityFile #{ssh_dir}/github_deploy_key"
end

FileUtils.chmod 0600, "#{ssh_dir}/config"


puts "############################### CONFIG IS"
putter File.read "#{ssh_dir}/config"
